ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_APP_ENV
ARG NEXT_PUBLIC_AUTH_URL
ARG PROPELAUTH_REDIRECT_URI
#
ARG PROD_API_URL
ARG PROPELAUTH_API_KEY
ARG PROPELAUTH_VERIFIER_KEY

FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat g++ make python3
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./
RUN yarn add sharp
RUN yarn install --frozen-lockfile

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
ENV NODE_OPTIONS="--max-old-space-size=4096"
ENV NEXT_TELEMETRY_DISABLED=1
# ENV DEBUG=*

ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_APP_ENV
ARG NEXT_PUBLIC_AUTH_URL
ARG PROPELAUTH_REDIRECT_URI
ARG PROD_API_URL
ARG PROPELAUTH_API_KEY
ARG PROPELAUTH_VERIFIER_KEY
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
ENV NEXT_PUBLIC_APP_ENV=${NEXT_PUBLIC_APP_ENV}
ENV NEXT_PUBLIC_AUTH_URL=${NEXT_PUBLIC_AUTH_URL}
ENV PROPELAUTH_REDIRECT_URI=${PROPELAUTH_REDIRECT_URI}
ENV PROD_API_URL=${PROD_API_URL}
ENV PROPELAUTH_API_KEY=${PROPELAUTH_API_KEY}
ENV PROPELAUTH_VERIFIER_KEY=${PROPELAUTH_VERIFIER_KEY}

RUN yarn build

# If using npm comment out above and use below instead
# RUN npm run build

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
# Uncomment the following line in case you want to disable telemetry during runtime.
# ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public

# Set the correct permission for prerender cache
RUN mkdir .next
RUN chown nextjs:nodejs .next

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_APP_ENV
ARG NEXT_PUBLIC_AUTH_URL
ARG PROPELAUTH_REDIRECT_URI
ARG PROD_API_URL
ARG PROPELAUTH_API_KEY
ARG PROPELAUTH_VERIFIER_KEY
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
ENV NEXT_PUBLIC_APP_ENV=${NEXT_PUBLIC_APP_ENV}
ENV NEXT_PUBLIC_AUTH_URL=${NEXT_PUBLIC_AUTH_URL}
ENV PROPELAUTH_REDIRECT_URI=${PROPELAUTH_REDIRECT_URI}
ENV PROD_API_URL=${PROD_API_URL}
ENV PROPELAUTH_API_KEY=${PROPELAUTH_API_KEY}
ENV PROPELAUTH_VERIFIER_KEY=${PROPELAUTH_VERIFIER_KEY}


USER nextjs

EXPOSE $PORT

ENV PORT=$PORT

# set hostname to localhost
ENV HOSTNAME="0.0.0.0"

# server.js is created by next build from the standalone output
# https://nextjs.org/docs/pages/api-reference/next-config-js/output
CMD ["node", "server.js"]