services:
  platform:
    build: ./platform
    ports:
      - "3000:3000"
    env_file:
      - ./.env.docker
    networks:
      - app_network
    depends_on:
      - backend

  backend:
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./.env.docker
    networks:
      - app_network
    depends_on:
      - extractor
      - mongodb

  # This is an example on how to run local Temporal server
  # Refer to this: https://github.com/temporalio/docker-compose
  # https://hub.docker.com/r/temporalio/auto-setup
  # postgresql:
  #   container_name: temporal-postgresql
  #   environment:
  #     POSTGRES_PASSWORD: temporal
  #     POSTGRES_USER: temporal
  #   image: postgres:12
  #   networks:
  #     - app_network
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - /var/lib/postgresql/data

  # temporal:
  #   container_name: temporal
  #   depends_on:
  #     - postgresql
  #   environment:
  #     - DB=postgres12
  #     - DB_PORT=5432
  #     - POSTGRES_USER=temporal
  #     - POSTGRES_PWD=temporal
  #     - POSTGRES_SEEDS=postgresql
  #     - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/temporal-dynamic-config.yaml
  #     - DEFAULT_NAMESPACE=default
  #   image: temporalio/auto-setup
  #   networks:
  #     - app_network
  #   ports:
  #     - "7233:7233" #server
  #     - "7999:7999" #UI
  #   volumes:
  #     - ./:/etc/temporal/config/dynamicconfig

  extractor:
    build:
      context: ./
      dockerfile: ./extractor/Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - ./.env.docker
    networks:
      - app_network
    depends_on:
      - mongodb
      - temporal

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app_network

  ai-hub:
    build:
      context: ./
      dockerfile: ./ai-hub/Dockerfile
    ports:
      - "8081:8081"
    env_file:
      - ./.env.docker
    networks:
      - app_network
    depends_on:
      - temporal
      - backend
      - extractor
      - mongodb

networks:
  app_network:
    driver: bridge

volumes:
  mongodb_data:
